from PyQt5 import QtCore, QtWidgets, QtWebEngineWidgets # pip install pyqtwebengine
from folium.plugins import Draw, MousePosition
import folium, io, sys, json
from PyQt5.QtWidgets import QApplication, QWidget, QPushButton, QVBoxLayout, QMainWindow, QLabel
from PyQt5 import uic

if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    m = folium.Map(location=[37,128], zoom_start=13)

    draw = Draw(
        draw_options={
            'polyline': False,
            'rectangle': False,
            'polygon': False,
            'circle': False,
            'marker': True,
            'circlemarker': False},
        edit_options={'edit': False})
    m.add_child(draw)

    formatter = "function(num) {return L.Util.formatNum(num, 3) + ' º ';};"
    MousePosition(
        position="topright",
        separator=" | ",
        empty_string="NaN",
        lng_first=True,
        num_digits=20,
        prefix="Coordinates:",
        lat_formatter=formatter,
        lng_formatter=formatter,
    ).add_to(m)

    data = io.BytesIO()
    m.save(data, close_file=False)

    class WebEnginePage(QtWebEngineWidgets.QWebEnginePage):
        def javaScriptAlert(self, securityOrigin: QtCore.QUrl, msg: str):
            coords_dict = json.loads(msg)
            coords = coords_dict['geometry']['coordinates']
            print(coords)

view = QtWebEngineWidgets.QWebEngineView()
page = WebEnginePage(view) ### get coords
view.setPage(page) ### get coords
view.setHtml(data.getvalue().decode()) # set bytesIO to html for visualzing
### view를 widgets 안으로
# view.show()

# form_class = uic.loadUiType("folium_in_Qt.ui")[0]
class WindowClass(QMainWindow) :
    def __init__(self) :
        super().__init__()
        # self.setupUi(self)

        layout = QVBoxLayout()

        self.folium_output = view

        # self.folium_output(view.show())
        # self.folium_output.show(view.show())
        layout.addWidget(self.folium_output)

        self.btn1 = QPushButton("PLAY")
        # self.btn1.clicked.connect(self.playVideo)
        layout.addWidget(self.btn1)

        # self.btn_stop = QPushButton("STOP")
        # self.btn_stop.clicked.connect(self.stopVideo)
        # layout.addWidget(self.btn_stop)

        self.widget = QWidget()
        self.widget.setLayout(layout)
        self.setCentralWidget(self.widget)


        #WebEngineView의 시그널
        # self.folium_in_Qt.loadStarted.connect(self.printLoadStart)
        # self.folium_in_Qt.loadProgress.connect(self.printLoading)

        #버튼들에 기능을 연결
        # self.btn_setUrl.clicked.connect(self.urlGo)
        # self.btn_back.clicked.connect(self.btnBackFunc)
        # self.btn_forward.clicked.connect(self.btnForwardFunc)

    #WebEngineView의 시그널에 연결된 함수들
    # def printLoadStart(self) : print("Start Loading")
    # def printLoading(self) : print("Loading")
    # def printLoadFinished(self) : print("Load Finished")

    # def urlChangedFunction(self) :
    #     self.line_url.setText(self.webEngineView_Test.url().toString()) ###
    #     print("Url Changed")

    #버튼을 눌렀을 때 실행될 함수들
    # def urlGo(self) :
    #     self.webEngineView_Test.load(QUrl(self.line_url.text()))
    #
    # def btnBackFunc(self) :
    #     self.webEngineView_Test.back()
    #
    # def btnForwardFunc(self) :
    #     self.webEngineView_Test.forward()

w = WindowClass()
w.show()
sys.exit(app.exec_())
